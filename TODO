API:
- implement tests for every route and structures
- try and use environment variables for some constants (maybe create a config
  module and initialize it once at launch)
- Check every unwrap() call. Remove the ones that should be removed (where a
  failure might happen and should be handled cleanly), and replace the others
  with expect calls to make sure we know what's going on.
- check the queries for unhandled failure (basically use the rows_affected
  value instead of returning an Ok(()))
- create superposable enum in db and add this information to pictures table

GLOBAL:
- create "filters" for the feed (like the superposable, the date, the user,
  etc...)
- add documentation about the populate scripts in README (maybe "clean" the
  logic so that it is simpler to use)
- maybe try and find a way to use an ENV variable to populate the database
- implement mail logic (find a way to send mail from the backend)

FRONT:
- add like/dislike buttons and toggle comments (or go to dedicated page when
  clicking on picture and then comment)
- also add a settings button to change account parameters (email, password,
  notfications, etc...)
- create edition page (studio, pepe's lair, or something cool idk) with current
  webcam view or an uploaded picture and a pepe selector, and also a side
  section for previously created pictures
- make sure this shit looks good on mobile ("displays correctly")
- use classes and ids instead of tags for the styling (more reliable)
